plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.moodTrip'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//통합 로그인  pom.xml
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//메일 전송 기능
	implementation 'org.springframework.boot:spring-boot-starter-mail'



	// WebSocket(채팅 기능용)
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// STOMP
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.3'

	// Thymeleaf
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// Swagger/OpenAPI 3.0
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// mariadb
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Configuration-processor
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'



	// JWT 버전 수정 .2->.5
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'




	// Query DSL (복잡한 쿼리용)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:mariadb'

	//메일 전송 기능
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.withType(JavaCompile) {
	options.compilerArgs += ['-parameters']
}

// QueryDSL 설정 추가
def generated = 'src/main/generated'

// 생성된 Q클래스 소스 경로 추가
sourceSets {
	main.java.srcDirs += [generated]
}

// clean 시 생성된 파일들 삭제
clean {
	delete file(generated)
}

// 컴파일 시 생성된 Q클래스들을 올바른 경로에 생성
compileJava {
	options.generatedSourceOutputDirectory = file(generated)
}


tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ['-parameters']
}


